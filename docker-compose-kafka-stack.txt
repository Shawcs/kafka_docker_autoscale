version: '3.2'
services:
  kafka:
    image: wurstmeister/kafka:latest
    deploy:
     placement:
      constraints: [node.role != manager]
     restart_policy:
        condition: on-failure
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
     - target: 9094
       published: 9094
       protocol: tcp
       mode: host
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      RACK_COMMAND: '1'
      KAFKA_BROKER_ID: 1
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_PROTOCOL_NAME: OUTSIDE
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_PROTOCOL_NAME: INSIDE
      KAFKA_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - KafkaNetwork
 #here it's to link the net work of the first stack (zookeeper stack)
networks:
  KafkaNetwork:
   external: true

   #ne reste plus qu'a prendre example-springboot-kafka-master et faire une Ã©criture lecture et trouver un moyen de scale kafka facilement